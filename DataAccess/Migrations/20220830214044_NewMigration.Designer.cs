// <auto-generated />
using System;
using DataAccess.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DataAccess.Migrations
{
    [DbContext(typeof(ProjectContext))]
    [Migration("20220830214044_NewMigration")]
    partial class NewMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.28")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("DataAccess.Entities.Manufacters", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Manufacters");
                });

            modelBuilder.Entity("DataAccess.Entities.Reservations", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ReservationID")
                        .HasColumnType("int");

                    b.Property<int>("User_ID")
                        .HasColumnType("int");

                    b.Property<int?>("UsersId")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ReservationID");

                    b.HasIndex("UsersId");

                    b.ToTable("Reservations");
                });

            modelBuilder.Entity("DataAccess.Entities.Roles", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Name")
                        .HasColumnType("int");

                    b.Property<int?>("RolesID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("RolesID");

                    b.ToTable("Roles");
                });

            modelBuilder.Entity("DataAccess.Entities.Types", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("Types");
                });

            modelBuilder.Entity("DataAccess.Entities.Users", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RoleID")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("RoleID1")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("RoleID1");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("DataAccess.Entities.Vessels", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Height")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Length")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Manufacter_ID")
                        .HasColumnType("int");

                    b.Property<int?>("ManufactersID")
                        .HasColumnType("int");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("Price")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Type_ID")
                        .HasColumnType("int");

                    b.Property<int?>("TypesID")
                        .HasColumnType("int");

                    b.Property<string>("Width")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.HasIndex("ManufactersID");

                    b.HasIndex("TypesID");

                    b.ToTable("Vessels");
                });

            modelBuilder.Entity("DataAccess.Entities.Reservations", b =>
                {
                    b.HasOne("DataAccess.Entities.Reservations", "Reservation")
                        .WithMany()
                        .HasForeignKey("ReservationID");

                    b.HasOne("DataAccess.Entities.Users", null)
                        .WithMany("PostComments")
                        .HasForeignKey("UsersId");
                });

            modelBuilder.Entity("DataAccess.Entities.Roles", b =>
                {
                    b.HasOne("DataAccess.Entities.Roles", null)
                        .WithMany("PostComments")
                        .HasForeignKey("RolesID");
                });

            modelBuilder.Entity("DataAccess.Entities.Users", b =>
                {
                    b.HasOne("DataAccess.Entities.Roles", "Role")
                        .WithMany()
                        .HasForeignKey("RoleID1");
                });

            modelBuilder.Entity("DataAccess.Entities.Vessels", b =>
                {
                    b.HasOne("DataAccess.Entities.Manufacters", null)
                        .WithMany("PostComments")
                        .HasForeignKey("ManufactersID");

                    b.HasOne("DataAccess.Entities.Types", null)
                        .WithMany("PostComments")
                        .HasForeignKey("TypesID");
                });
#pragma warning restore 612, 618
        }
    }
}
